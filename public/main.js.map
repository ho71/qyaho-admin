{"version":3,"sources":["./src/app/components/Qrscan/qrscan.component.ts","./src/app/components/Qrscan/qrscan.component.html","./src/app/components/business/business.component.ts","./src/app/components/business/business.component.html","./src/app/components/businesslogin/businesslogin.component.ts","./src/app/components/businesslogin/businesslogin.component.html","./src/environments/environment.ts","./src/app/components/dialog/dialog.component.ts","./src/app/components/dialog/dialog.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/pic-slide/pic-slide.component.ts","./src/app/components/pic-slide/pic-slide.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/customers.service.ts","./src/app/components/customer-num/customer-num.component.ts","./src/app/components/customer-num/customer-num.component.html","./src/app/app.module.ts","./src/app/services/customers_num.service.ts","./src/app/components/customer-list/customer-list.component.ts","./src/app/components/customer-list/customer-list.component.html","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/app/models/User.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACyB;AAK9B;;;;;;;;;;;ICP/B,4EAA2I;IAAvG,6TAA4B;IAC9D,2EAAU;IAAA,mEAAQ;IAAA,4DAAW;IAC/B,4DAAS;;;IAFwD,uFAAuB;;;;IAIxF,4EAAwI;IAArG,6TAA4B;IAC7D,2EAAU;IAAA,uEAAY;IAAA,4DAAW;IACnC,4DAAS;;;IAFuD,wFAAwB;;ADUjF,MAAM,eAAe;IAS1B,YACU,gBAAoC,EACrC,MAAiB;QADhB,qBAAgB,GAAhB,gBAAgB,CAAoB;QACrC,WAAM,GAAN,MAAM,CAAW;QAL1B,cAAS,GAAc,EAAE,CAAC;QAC1B,sBAAiB,GAAW,CAAC,CAAC;IAK3B,CAAC;IAEJ,gBAAgB;QACd,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;IACH,CAAC;IAED,UAAU;QACR,SAAS,CAAC,YAAY;aACnB,gBAAgB,EAAE;aAClB,IAAI,CAAC,CAAC,mBAAmB,EAAE,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;YACjC,MAAM,YAAY,GAAG,mBAAmB,CAAC,MAAM,CAC7C,CAAC,UAAU,EAAE,EAAE,CAAC,UAAU,CAAC,IAAI,KAAK,YAAY,CACjD,CAAC;YACF,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAC3C;YACD,OAAO,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC;gBACzC,KAAK,EAAE,KAAK;gBACZ,KAAK,EAAE;oBACL,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ;oBAClC,eAAe,EAAE,IAAI;oBACrB,KAAK,EAAE,GAAG;oBACV,MAAM,EAAE,GAAG;iBACZ;aACF,CAAC,CAAC;QACL,CAAC,CAAC;aACD,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;YACpB,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC;YAC1B,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,GAAG,WAAW,CAAC;gBACxD,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;SACxC;IACH,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACzD,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YAC9D,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC;YAErD,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC;YAEvD,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,UAAU,CACzD,IAAI,CACuB,CAAC;YAE9B,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAExE,MAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;YAC5D,yBAAyB;YAEzB,MAAM,MAAM,GAAG,2CAAI,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,MAAM,EAAE;gBACrE,iBAAiB,EAAE,YAAY;aAChC,CAAC,CAAC;YAEH,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aACzB;iBAAM;gBACL,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC,EAAE,GAAG,CAAC,CAAC;aACT;SACF;IACH,CAAC;IAED,YAAY,CAAC,MAAM;QACjB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,IAAI,EAAE,IAAI,CAAC,GAAG;oBACd,IAAI,EAAE,SAAS;oBACf,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;aACrD;iBAAM;gBACL,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,IAAI,EAAE,IAAI,CAAC,GAAG;oBACd,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wEAAe,EAAE;YAClD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE;SACzB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC3C,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;gBACnB,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAE/B,qDAAqD;gBACrD,sCAAsC;gBACtC,MAAM;gBACN,sDAAsD;aACvD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;8EArIU,eAAe;+FAAf,eAAe;;;;;;;;QCd5B,iHAES;QAET,iHAES;QACT,gEAAI;QACJ,yEAA0E;QAC1E,0EAAgC;;QATvB,iFAAiB;QAIjB,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;ACAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;AAMxB,MAAM,iBAAiB;IAW5B,YACU,eAAgC,EAChC,WAAwB,EACxB,MAAc;QAFd,oBAAe,GAAf,eAAe,CAAiB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE3B,QAAQ;IACR,CAAC;IAED,gBAAgB;QAEhB,MAAM,YAAY,GAAG;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC1B;QAGH,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAC;YACtD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,IAAI;aACxB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QAED,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE;YACrC,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,kBAAkB;gBACxB,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,IAAI;aACxB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QAED,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EAAC;YACzD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,mBAAmB;gBACzB,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,IAAI;aACxB,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;SACd;QAED,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,YAAY,CAAC,UAAU,CAAC,EAAC;YAC7D,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,WAAW;gBAClB,IAAI,EAAE,iBAAiB;gBACvB,IAAI,EAAE,OAAO;gBACb,iBAAiB,EAAE,IAAI;aACxB,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpC,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7D,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,WAAW;oBAClB,IAAI,EAAE,SAAS;oBACf,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;aAC1C;iBAAM;gBACL,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,WAAW;oBAClB,IAAI,EAAE,IAAI,CAAC,GAAG;oBACd,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,IAAI;iBAExB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACpC,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kFA3FY,iBAAiB;iGAAjB,iBAAiB;QCV9B,gEAAI;QACJ,wEAAwB;QAAA,4GAAc;QAAA,4DAAK;QAC3C,gEAAI;QACJ,0EAAsC;QAAhC,6IAAY,sBAAkB,IAAC;QACjC,yEAA0B;QACtB,wEAAO;QAAC,2EAAK;QAAA,4DAAQ;QACrB,2EAAuE;QAApD,mLAAkB;QAArC,4DAAuE;QAC3E,4DAAM;QACN,yEAAwB;QACpB,yEAAO;QAAC,kFAAM;QAAA,4DAAQ;QACtB,4EAAyE;QAAtD,qLAAmB;QAAtC,4DAAyE;QAC7E,4DAAM;QACN,0EAAwB;QACpB,yEAAO;QAAC,wFAAO;QAAA,4DAAQ;QACvB,4EAAyE;QAAtD,qLAAmB;QAAtC,4DAAyE;QAC7E,4DAAM;QACN,0EAAwB;QACpB,yEAAO;QAAC,kEAAK;QAAA,4DAAQ;QACrB,4EAA+E;QAA5D,wLAAsB;QAAzC,4DAA+E;QACnF,4DAAM;QACN,0EAAwB;QACpB,yEAAO;QAAC,wFAAO;QAAA,4DAAQ;QACvB,4EAAqF;QAA9D,yLAAuB;QAA9C,4DAAqF;QACzF,4DAAM;QACN,0EAAwB;QACpB,yEAAO;QAAC,qGAAU;QAAA,4DAAQ;QAC1B,6EAAqF;QAA9D,yLAAuB;QAA9C,4DAAqF;QACzF,4DAAM;QACN,0EAA0B;QACtB,yEAAO;QAAC,8HAAoB;QAAA,4DAAQ;QACpC,6EAAqF;QAAhE,0LAAwB;QAA7C,4DAAqF;QACzF,4DAAM;QACN,iEAAI;QACJ,wEAA0D;QAC9D,4DAAO;;QA5BoB,0DAAkB;QAAlB,6EAAkB;QAIlB,0DAAmB;QAAnB,8EAAmB;QAInB,0DAAmB;QAAnB,8EAAmB;QAInB,0DAAsB;QAAtB,iFAAsB;QAIlB,0DAAuB;QAAvB,kFAAuB;QAIvB,0DAAuB;QAAvB,kFAAuB;QAIzB,0DAAwB;QAAxB,mFAAwB;;;;;;;;;;;;;;AC3BrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;AAOxB,MAAM,sBAAsB;IAKjC,YACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,aAAa;QACX,MAAM,aAAa,GAAG;YACpB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B;QAED,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpE,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1D,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,UAAU;oBACjB,IAAI,EAAE,SAAS;oBACf,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5B;iBAAM;gBACL,kDAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE,UAAU;oBACjB,IAAI,EAAE,IAAI,CAAC,GAAG;oBACd,IAAI,EAAE,OAAO;oBACb,iBAAiB,EAAE,IAAI;iBACxB,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;aAC1C;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;4FAvCU,sBAAsB;sGAAtB,sBAAsB;QCVnC,gEAAI;QACJ,wEAAwB;QAAA,sGAAa;QAAA,4DAAK;QAC1C,gEAAI;QACJ,0EAAqC;QAA/B,kJAAc,mBAAe,IAAC;QAChC,yEAAwB;QACpB,wEAAO;QAAA,6DAAE;QAAA,4DAAQ;QACjB,2EAA+E;QAAvB,4LAAsB;QAA9E,4DAA+E;QACnF,4DAAM;QACN,gEAAI;QACJ,0EAAwB;QACpB,yEAAO;QAAA,oFAAI;QAAA,4DAAQ;QACnB,4EAAmF;QAAvB,6LAAsB;QAAlF,4DAAmF;QACvF,4DAAM;QACN,iEAAI;QACJ,0EAAwB;QACpB,yEAAO;QAAA,+IAAkB;QAAA,4DAAQ;QACjC,4EAAmF;QAAzB,+LAAwB;QAAlF,4DAAmF;QACvF,4DAAM;QACN,uEAA2D;QAC/D,4DAAO;;QAbyD,0DAAsB;QAAtB,iFAAsB;QAKlB,0DAAsB;QAAtB,iFAAsB;QAKxB,0DAAwB;QAAxB,mFAAwB;;;;;;;;;;;;;;AChB1F;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;;;;;;ICCvE,oEAAqC;IAAA,uDAAsB;IAAA,4DAAI;;;IAA1B,0DAAsB;IAAtB,wFAAsB;;ADWtD,MAAM,eAAe;IAC1B,YACS,SAAwC,EACf,IAAgB;QADzC,cAAS,GAAT,SAAS,CAA+B;QACf,SAAI,GAAJ,IAAI,CAAY;IAElD,CAAC;IAED,QAAQ;IACR,CAAC;IAGD,SAAS;QAEP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;8EAdU,eAAe,0MAGhB,wEAAe;+FAHd,eAAe;QCb5B,wEAAqB;QAAA,kEAAO;QAAA,4DAAK;QACjC,wFAA2C;QACzC,uGAA+D;QACjE,4DAAqB;QACrB,qFAAoB;QAClB,4EAA6C;QAAA,6DAAE;QAAA,4DAAS;QAC1D,4DAAqB;;QAJf,0DAA+B;QAA/B,+FAA+B;QAGhB,0DAAyB;QAAzB,kFAAyB;;;;;;;;;;;;;;ACF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;;ICS7B,4EAKC;IACC,yGACF;IAAA,4DAAS;;;IAET,4EAOC;IACC,kGACF;IAAA,4DAAS;;;IAvBX,yEAA8E;IAC5E,wEAAoB;IAAA,0HAAa;IAAA,4DAAK;IACtC,wEAAqB;IAAA,4IAAgB;IAAA,4DAAK;IAC1C,gEAAM;IAEN,qHAOS;IACT,mEACA;IAAA,qHASS;IACT,mEACA;IAAA,iEAAM;IACR,4DAAM;;;IApBD,0DAAsB;IAAtB,yFAAsB;IAStB,0DAAsB;IAAtB,yFAAsB;;;IAa3B,0EAUC;IACC,yEAAoD;IAClD,kIACF;IAAA,4DAAK;IACP,4DAAM;;;IAEN,0EAUC;IACC,6EAAmE;IACjE,mGACF;IAAA,4DAAS;IACT,mEACA;IAAA,6EAAmE;IACjE,sHACF;IAAA,4DAAS;IAET,yEAAuB;IAAA,uDAAuC;IAAA,4DAAK;IACnE,yEAAuB;IACrB,uDACF;IAAA,4DAAK;IACP,4DAAM;;;IAJmB,0DAAuC;IAAvC,yKAAuC;IAE5D,0DACF;IADE,+KACF;;ADxDK,MAAM,aAAa;IAMxB,YACU,WAAwB,EACxB,MAAc,EACd,gBAAoC;QAFpC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAoB;QAR9C,aAAQ,GAAG,MAAM,CAAC;QAElB,cAAS,GAAc,EAAE,CAAC;QAC1B,sBAAiB,GAAW,CAAC,CAAC;QAO5B,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;QACvC,CAAC,CAAC,CAAC;IACJ,CAAC;IAID,QAAQ;QACH,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAChD,IAAI,CAAC,QAAQ,GAAE,OAAO,CAAC,IAAI,CAAC;QAC9B,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IAET,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,WAAW;YAClB,IAAI,EAAE,SAAS;YACf,iBAAiB,EAAE,IAAI;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACd,CAAC;IACD,aAAa;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;;0EAzCU,aAAa;6FAAb,aAAa;QCX1B,gEAAM;QACN,0GA0BM;QACN,gEAAM;QACN,yGAcM;QACN,gEAAM;QACN,0GAuBM;QACN,gEAAM;QACN,sEAAK;QACH,2EAA+B;QACjC,4DAAM;;QAvEA,0DAAsB;QAAtB,sFAAsB;QA6BzB,0DAAqB;QAArB,qFAAqB;QAgBrB,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;;;;;;;;;AC7CjB,MAAM,iBAAiB;IAL9B;QAME,eAAU,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;KACxD;;kFAFY,iBAAiB;iGAAjB,iBAAiB;QCP9B,yEAAuB;QACrB,kFAAuE;QACrE,yEAAkB;QAChB,oEAA4C;QAC9C,4DAAM;QACN,yEAAkB;QAChB,oEAA4C;QAC9C,4DAAM;QACR,4DAAe;QACjB,4DAAM;QACN,gEAAM;;QATU,0DAAsB;QAAtB,mFAAsB;;;;;;;;;;;;;;;;;;ACO/B,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCR5B,4EAA8B;QAC1B,yEAAsD;QAClD,uEAAuC;QAAA,qFAA0B;QAAA,4DAAI;QACrE,uEAAsC;QAAC,+EAAmB;QAAA,4DAAI;QAClE,4DAAM;QACV,4DAAS;;;;;;;;;;;;;;;;;;;;;;;;ACEF,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,OAAO,CAAC;QAEhB,SAAI,GAAG,SAAS,CAAC;QACjB,gBAAW,GAAG,CAAC;gBACX,KAAK,EAAE,4EAA4E;gBACnF,UAAU,EAAE,4EAA4E;gBACxF,KAAK,EAAE,oCAAoC;aAC9C,EAAE;gBACC,KAAK,EAAE,4EAA4E;gBACnF,UAAU,EAAE,4EAA4E;aAC3F,EAAE;gBACC,KAAK,EAAE,4EAA4E;gBACnF,UAAU,EAAE,4EAA4E;gBACxF,KAAK,EAAE,qBAAqB;aAC/B,EAAC;gBACE,KAAK,EAAE,4EAA4E;gBACnF,UAAU,EAAE,4EAA4E;gBACxF,KAAK,EAAE,oCAAoC;aAC9C,EAAE;gBACC,KAAK,EAAE,4EAA4E;gBACnF,UAAU,EAAE,4EAA4E;aAC3F,EAAE;gBACC,KAAK,EAAE,4EAA4E;gBACnF,UAAU,EAAE,4EAA4E;gBACxF,KAAK,EAAE,yBAAyB;aACnC,CAAC,CAAC;KAEJ;;wEA5BY,YAAY;4FAAZ,YAAY;QCPzB,uEAAM;QACJ,yEAAQ;QACN,wEAAyB;QAC3B,4DAAS;QACT,uEAAM;QACJ,yEAAuB;QACrB,2EAA+B;QACjC,4DAAM;QACR,4DAAO;QACP,yEAAQ;QACN,wEAAyB;QAC3B,4DAAS;QACX,4DAAO;;;;;;;;;;;;;;ACXP;AAAA;AAAA;AAAA;AAA+D;;;AAI/D,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH,CAAC;AACF,OAAO;AAIA,MAAM,gBAAgB;IAC3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAUpC,YAAO,GAAW,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;IAVhB,CAAC;IAExC,YAAY,CAAC,EAAE;QACb,oBAAoB;QACpB,wCAAwC;QAExC,yBAAyB;QACzB,OAAO,EAAE,CAAC;IACZ,CAAC;IAID,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC1D,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;IAClE,CAAC;IAED,WAAW,CAAC,IAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAC/D,CAAC;IAED,YAAY,CAAC,EAAU,EAAE,IAAU;QACjC,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAO,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC;aACpD,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI;aACb,MAAM,CAAO,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,EAAE,EAAE,WAAW,CAAC;aACjD,SAAS,EAAE,CAAC;IACjB,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;;gFAtCU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;ICczB,qEAAsD;IACpD,wEAA4C;IAC1C,qEAAI;IAAA,uDAAO;IAAA,4DAAK;IAClB,4DAAK;IACL,wEAA4C;IAC1C,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC9B,4DAAK;IAUL,wEAA4C;IACxC,qEAAI;IAAA,uDAA2C;;IAAA,4DAAK;IACtD,4DAAK;IAEP,yEAA4C;IAC1C,6EAAsE;IAA9D,gXAAsC;IAAwB,wEAAE;IAAA,4DAAS;IACnF,4DAAK;IAIP,4DAAK;;;;IAxBG,0DAAO;IAAP,yEAAO;IAGP,0DAAmB;IAAnB,iFAAmB;IAYjB,0DAA2C;IAA3C,uKAA2C;;ADxBpD,MAAM,oBAAoB;IAQ/B,YAAoB,gBAAoC;QAApC,qBAAgB,GAAhB,gBAAgB,CAAoB;QAHxD,cAAS,GAAc,EAAE,CAAC;QAC1B,sBAAiB,GAAW,CAAC,CAAC;QAG5B,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,cAAc,CAAC,EAAU;QACvB,kDAAI,CAAC,IAAI,CAAC;YACV,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,oBAAoB;YACxB,IAAI,EAAE,SAAS;YAClB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,MAAM;YACzB,iBAAiB,EAAE,SAAS;YAC1B,iBAAiB,EAAE,IAAI;SACzB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAChB,IAAI,MAAM,CAAC,KAAK,EAAE;gBACnB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;gBAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;gBAC1E,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;gBACnD,kDAAI,CAAC,IAAI,CAAC,KAAK,EAAG,eAAe,CAAC,CAAC;aACpC;QACJ,CAAC,CAAC,CAAC;IACH,CAAC;;wFAjCW,oBAAoB;oGAApB,oBAAoB;QCZjC,gEAAI;QACJ,wEAAwB;QAAA,qFAAM;QAAA,4DAAK;QACnC,sEAAK;QACH,yEAA6B;QAC3B,uEAAwB;QAAA,uDAA4B;QAAA,4DAAI;QAC1D,4DAAM;QACN,2EAAqB;QACnB,2EAA0B;QACxB,wEAAwB;QACtB,yEAAgB;QAAA,wEAAE;QAAA,4DAAK;QACvB,yEAAgB;QAAA,wEAAE;QAAA,4DAAK;QAGvB,yEAAgB;QAAA,kGAAQ;QAAA,4DAAK;QAC7B,yEAAgB;QAAA,qFAAK;QAAA,4DAAK;QAC5B,4DAAK;QACP,4DAAQ;QAER,yEAAO;QACL,iHA0BK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;;QA5CsB,0DAA4B;QAA5B,mHAA4B;QAezB,2DAAc;QAAd,kFAAc;;;;;;;;;;;;;;AClB7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACQ;AACV;AACA;AACG;AACA;AACJ;AACwB;AACnB;AACN;AACP;AACG;AACL;AAGE;AACwB;AACN;AAC0B;AACH;AACX;AACe;AACrB;AACQ;AACR;AACA;AAET;AACR;;;;AAEtD,MAAM,UAAU,GAAqB;IACnC,UAAU,EAAE,KAAK;CAClB,CAAC;AAyCK,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,4DAAY;8FADb,CAAC,2EAAe,EAAE,mEAAW,CAAC,YAvBhC;YACP,uEAAa;YACb,0DAAW;YACX,oEAAgB;YAChB,qEAAgB;YAChB,yEAAe;YACf,mEAAa;YACb,kEAAmB;YACnB,oEAAa;YACb,wEAAe;YACf,wEAAe;YACf,4FAAuB;YACvB,2DAAS;YAET,6DAAS,CAAC,OAAO,CAAC;gBAChB,MAAM,EAAE;oBACN,WAAW,EAAE,GAAG,EAAE;wBAChB,OAAO,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;oBAC1C,CAAC;iBACF;aACF,CAAC;YACF,uDAAa,CAAC,OAAO,CAAC,UAAU,CAAC;SAClC;oIAIU,SAAS,mBAtClB,4DAAY;QACZ,oFAAe;QACf,8EAAa;QACb,wGAAqB;QACrB,qGAAoB;QACpB,0FAAiB;QACjB,yGAAsB;QACtB,oFAAe;QACf,4FAAiB;QACjB,oFAAe;QACf,oFAAe,aAGf,uEAAa;QACb,0DAAW;QACX,oEAAgB;QAChB,qEAAgB;QAChB,yEAAe;QACf,mEAAa;QACb,kEAAmB;QACnB,oEAAa;QACb,wEAAe;QACf,wEAAe;QACf,4FAAuB;QACvB,2DAAS;;;;;;;;;;;;;AC3Db;AAAA;AAAA;AAAA;AAA+D;;;AAI/D,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH,CAAC;AAEF,OAAO;AAIA,MAAM,kBAAkB;IAW7B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAW,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;IAEjB,CAAC;IAVxC,YAAY,CAAC,EAAE;QACb,oBAAoB;QACpB,wCAAwC;QAExC,yBAAyB;QACzB,OAAO,EAAE,CAAC;IACZ,CAAC;IAMD,eAAe;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC7D,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;IACrE,CAAC;IAED,cAAc,CAAC,OAAgB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IACrE,CAAC;IAED,eAAe,CAAC,EAAU,EAAE,OAAgB;QAC1C,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAU,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,WAAW,CAAC;aAC1D,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,OAAO,IAAI,CAAC,IAAI;aACb,MAAM,CAAU,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,EAAE,EAAE,WAAW,CAAC;aACpD,SAAS,EAAE,CAAC;IACjB,CAAC;;oFAnCU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;ACZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AAGT;;;;;;;ICcrB,qEAAuC;IACrC,wEAA4C;IAC1C,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC9B,4DAAK;IACL,wEAA4C;IACxC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAClC,4DAAK;IACP,wEAA4C;IAC1C,qEAAI;IAAA,uDAAoB;IAAA,4DAAK;IAC/B,4DAAK;IAIL,yEAA4C;IACxC,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IAC/B,4DAAK;IAEP,yEAA4C;IAC1C,6EAAsE;IAA9D,iXAAsC;IAAwB,wEAAE;IAAA,4DAAS;IACnF,4DAAK;IACP,4DAAK;;;IAlBG,0DAAmB;IAAnB,iFAAmB;IAGjB,0DAAuB;IAAvB,qFAAuB;IAGzB,0DAAoB;IAApB,kFAAoB;IAMlB,0DAAoB;IAApB,kFAAoB;;ADrBjC,MAAM,qBAAqB;IAOhC,YAAoB,gBAAkC,EAAU,QAAqB;QAAjE,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,aAAQ,GAAR,QAAQ,CAAa;QALrF,cAAS,GAAW,EAAE,CAAC;QAEvB,qBAAgB,GAAS,IAAI,iDAAI,EAAE,CAAC;QACpC,sBAAiB,GAAW,CAAC,CAAC;QAG5B,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,4CAA4C;QAC5C,2CAA2C;QAC3C,0CAA0C;QAC1C,8EAA8E;QAC9E,uCAAuC;QACvC,MAAM;IACR,CAAC;IACD,QAAQ;IAER,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;IAED,YAAY,CAAC,MAAY;QACvB,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,KAAK,SAAS,EAAE;YAC3C,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YACpD,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,MAAM;aAC1B,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAEtE,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CACpC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,gBAAgB,CAAC,GAAG,CACjD,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;YACvE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;YACvE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC;YACtE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACvE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACpE,kDAAI,CAAC,IAAI,CAAC;gBACR,KAAK,EAAE,cAAc;gBACrB,IAAI,EAAE,SAAS;gBACf,iBAAiB,EAAE,MAAM;aAC1B,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,iDAAI,EAAE,CAAC;QACnC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,SAAS;IACT,cAAc,CAAC,EAAU;QACtB,kDAAI,CAAC,IAAI,CAAC;YACV,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,oBAAoB;YACxB,IAAI,EAAE,SAAS;YAClB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,MAAM;YACzB,iBAAiB,EAAE,SAAS;YAC1B,iBAAiB,EAAE,IAAI;SACzB,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAChB,IAAI,MAAM,CAAC,KAAK,EAAE;gBACnB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;gBACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC;gBAC1E,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;gBACnD,kDAAI,CAAC,IAAI,CAAC,KAAK,EAAE,mBAAmB,EAAE,SAAS,CAAC,CAAC;aAClD;QACJ,CAAC,CAAC,CAAC;IACH,CAAC;IAEA,YAAY,CAAC,QAAc;QAC1B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACxE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC1E,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACvE,CAAC;;0FA3FS,qBAAqB;qGAArB,qBAAqB;QCX9B,gEAAI;QACJ,wEAAwB;QAAA,qFAAM;QAAA,4DAAK;QACnC,sEAAK;QACH,yEAA6B;QAC3B,uEAAwB;QAAA,uDAA6B;QAAA,4DAAI;QAC3D,4DAAM;QACN,2EAAqB;QACnB,2EAA0B;QACxB,wEAAwB;QACtB,yEAAgB;QAAA,wEAAE;QAAA,4DAAK;QACvB,yEAAgB;QAAA,8DAAE;QAAA,4DAAK;QACvB,yEAAgB;QAAA,8EAAG;QAAA,4DAAK;QACxB,yEAAgB;QAAA,wEAAE;QAAA,4DAAK;QAC3B,yEAAgB;QAAA,qFAAK;QAAA,4DAAK;QACxB,4DAAK;QACP,4DAAQ;QAER,yEAAO;QACL,kHAoBK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;;QArCsB,0DAA6B;QAA7B,oHAA6B;QAc1B,2DAAY;QAAZ,kFAAY;;;;;;;;;;;;;;;;;;ACbxC,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,gBAAgB,CAAC,IAAI;QACnB,IAAG,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,EAAE;YAC9J,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,gBAAgB,CAAC,YAAY;QAC3B,IAAG,YAAY,CAAC,IAAI,IAAI,EAAE,IAAI,YAAY,CAAC,IAAI,IAAI,SAAS,IAAI,YAAY,CAAC,KAAK,IAAI,SAAS,IAAI,YAAY,CAAC,QAAQ,IAAI,SAAS,IAAI,YAAY,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC3K,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,EAAE,GAAG,2JAA2J,CAAC;QACrK,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAED,YAAY,CAAC,UAAU;QACrB,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;QACzC,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC;QAC5B,IAAG,UAAU,IAAI,UAAU,IAAI,UAAU,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAC;YACzD,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;8EAjCQ,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;ICazB,wEAA8C;IAC5C,uEAA2C;IAAA,sGAAQ;IAAA,4DAAI;IACzD,4DAAK;;;IAEL,wEAA8C;IAC5C,uEAAgD;IAAA,gGAAO;IAAA,4DAAI;IAC7D,4DAAK;;;IAEL,wEAA6C;IAC3C,wEAAgD;IAAA,iGAAQ;IAAA,4DAAI;IAC9D,4DAAK;;;IAEL,wEAA6C;IAC3C,wEAA+C;IAAA,iGAAQ;IAAA,4DAAI;IAC7D,4DAAK;;;IAEL,wEAA6C;IAC3C,wEAAyC;IAAA,iEAAM;IAAA,4DAAI;IACrD,4DAAK;;;;IAEL,wEAA6C;IAC3C,wEAAuD;IAAnC,kTAAyB;IAAU,mFAAI;IAAA,4DAAI;IACjE,4DAAK;;AD5BJ,MAAM,eAAe;IAE1B,YACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,WAAW;YAClB,IAAI,EAAE,SAAS;YACf,iBAAiB,EAAE,IAAI;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,OAAO,KAAK,CAAC;IACd,CAAC;IACD,aAAa;QACX,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACrC,CAAC;;8EAtBS,eAAe;+FAAf,eAAe;QCV5B,yEAAyD;QACvD,uEAAiC;QAAA,2GAAa;QAAA,4DAAI;QAClD,4EAQC;QACC,qEAAyC;QAC3C,4DAAS;QAET,yEAAkE;QAChE,wEAA+B;QAC7B,yGAEK;QAEL,yGAEK;QAEL,yGAEK;QAEL,2GAEK;QAEL,2GAEK;QAEL,2GAEK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;;QAzBK,0DAAsB;QAAtB,sFAAsB;QAItB,0DAAsB;QAAtB,sFAAsB;QAItB,0DAAqB;QAArB,qFAAqB;QAIrB,0DAAqB;QAArB,qFAAqB;QAIrB,0DAAqB;QAArB,qFAAqB;QAIrB,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;ACnChC;AAAA;AAAA;AAAA;AAAA;AAA+D;;;;AAK/D,MAAM,WAAW,GAAG;IAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;KACnC,CAAC;CACH,CAAC;AAKK,MAAM,WAAW;IAItB,YAAoB,IAAgB,EAAS,SAA2B;QAApD,SAAI,GAAJ,IAAI,CAAY;QAAS,cAAS,GAAT,SAAS,CAAkB;IAAG,CAAC;IAE5E,YAAY,CAAC,EAAE;QACb,oBAAoB;QACpB,wCAAwC;QAExC,yBAAyB;QACzB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,aAAa,CAAC,KAAK,EAAE,QAAQ;QAC3B,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACxC,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAClD,MAAM,YAAY,GAAG;YACnB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,aAAa,EAAE,SAAS,GAAG,IAAI,CAAC,SAAS;aAC1C,CAAC;SACH,CAAC;QAEF,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;IACjD,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;IAED,YAAY,CAAC,YAAY;QACvB,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;IAChE,CAAC;IAED,oBAAoB,CAAC,aAAa;QAChC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,yBAAyB,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAgB,SAAS,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;IAC9E,CAAC;;sEApDU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACZpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEgB;AACN;AACsB;AACV;AACe;AACD;AACpB;;;AAEvE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6EAAa,EAAE;IACtC,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,oGAAoB,EAAC;IACxD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAC;IACjD,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,wGAAsB,EAAE;IAC5D,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,uGAAqB,EAAC;IAC1D,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAE;CAC/C,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACvBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,IAAI;CAOhB;AAEM,MAAM,KAAK;CAGjB;AAEM,MAAM,QAAQ;CAIpB;AAEM,MAAM,QAAQ;CAOpB;AAEM,MAAM,aAAa;CAIzB;;;;;;;;;;;;;;;;;;;ACjC8C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport jsQR, { QRCode } from 'jsqr';\nimport { DialogComponent } from '../dialog/dialog.component';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { CustomerNumService } from '../../services/customers_num.service';\nimport { Cus_num } from '../../models/cus.num';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-qrscan',\n  templateUrl: './qrscan.component.html',\n  styleUrls: ['./qrscan.component.css'],\n})\nexport class QrscanComponent {\n  @ViewChild('video') videoElement: ElementRef | undefined;\n  @ViewChild('canvas') canvasElement: ElementRef | undefined;\n\n  stream: MediaStream | undefined;\n\n  customers: Cus_num[] = [];\n  customersQuantity: number = 0;\n\n  constructor(\n    private customer1Service: CustomerNumService,\n    public dialog: MatDialog\n  ) {}\n\n  toggleVideoMedia(): void {\n    if (this.isActive()) {\n      this.stopVideo();\n    } else {\n      this.startVideo();\n    }\n  }\n\n  startVideo(): void {\n    navigator.mediaDevices\n      .enumerateDevices()\n      .then((mediaDeviceInfoList) => {\n        console.log(mediaDeviceInfoList);\n        const videoDevices = mediaDeviceInfoList.filter(\n          (deviceInfo) => deviceInfo.kind === 'videoinput'\n        );\n        if (videoDevices.length === 0) {\n          throw new Error('no video input devices');\n        }\n        return navigator.mediaDevices.getUserMedia({\n          audio: false,\n          video: {\n            deviceId: videoDevices[0].deviceId,\n            autoGainControl: true,\n            width: 960,\n            height: 640,\n          },\n        });\n      })\n      .then((mediaStream) => {\n        this.stream = mediaStream;\n        if (this.videoElement) {\n          this.videoElement.nativeElement.srcObject = mediaStream;\n          this.processImage();\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  stopVideo(): void {\n    if (this.stream) {\n      this.stream.getVideoTracks()[0].stop();\n    }\n  }\n\n  isActive(): boolean {\n    return this.stream !== undefined && this.stream.active;\n  }\n\n  processImage(): void {\n    if (this.videoElement && this.canvasElement && this.isActive()) {\n      const width = this.canvasElement.nativeElement.width;\n\n      const height = this.canvasElement.nativeElement.height;\n\n      const context = this.canvasElement.nativeElement.getContext(\n        '2d'\n      ) as CanvasRenderingContext2D;\n\n      context.drawImage(this.videoElement.nativeElement, 0, 0, width, height);\n\n      const imageData = context.getImageData(0, 0, width, height);\n      //console.log(imageData);\n\n      const qrcode = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: 'dontInvert',\n      });\n\n      if (qrcode && qrcode.data.length !== 0) {\n        this.openDialog(qrcode);\n      } else {\n        setTimeout(() => {\n          this.processImage();\n        }, 100);\n      }\n    }\n  }\n\n  manageSubmit(values) {\n    this.customer1Service.addCustomerNum(values).subscribe((data) => {\n      if (data.success) {\n        Swal.fire({\n          title: data.title,\n          text: data.msg,\n          icon: 'success',\n          confirmButtonText: '확인',\n        });\n        this.customers.push(values);\n        this.customersQuantity = this.customersQuantity + 1;\n      } else {\n        Swal.fire({\n          title: data.title,\n          text: data.msg,\n          icon: 'error',\n          confirmButtonText: '확인',\n        });\n      }\n    });\n  }\n\n  openDialog(qrcode: QRCode) {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '800px',\n      data: { qrcode: qrcode },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (this.isActive()) {\n        this.processImage();\n        this.manageSubmit(qrcode.data);\n\n        // this.qradd.addCustomerNum1().subscribe((data) => {\n        //   return this.customers.push(data);\n        // });\n        // this.customersQuantity = this.customersQuantity + 1\n      }\n    });\n  }\n}\n","<button *ngIf=\"!isActive()\" mat-fab (click)=\"toggleVideoMedia()\" [disabled]=\"isActive()\" color=\"primary\" aria-label=\"videocam icon-button\">\n  <mat-icon>videocam</mat-icon>\n</button>\n\n<button *ngIf=\"isActive()\" mat-fab (click)=\"toggleVideoMedia()\" [disabled]=\"!isActive()\" color=\"warn\" aria-label=\"videocam icon-button\">\n  <mat-icon>videocam_off</mat-icon>\n</button>\n<br>\n<video #video autoplay muted playsinline width=\"640\" height=\"480\"></video>\n<canvas #canvas hidden></canvas>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from \"sweetalert2\";\n@Component({\n  selector: 'app-business',\n  templateUrl: './business.component.html',\n  styleUrls: ['./business.component.scss']\n})\nexport class BusinessComponent implements OnInit {\n  \n  name: string;\n  username: string;\n  email: string;\n  password: string;\n  password1: string;\n  password2: string;\n  birth: number;\n  licenseNum: number;\n\n  constructor(\n    private validateService: ValidateService, \n    private authService: AuthService,\n    private router :Router) { }\n\n    ngOnInit(): void {\n    }\n\n    onRegisterSubmit(){ \n\n    const businessuser = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password1,\n      birth: this.birth,\n      licenseNum: this.licenseNum\n      }\n\n    \n    if(!this.validateService.validatebusiness(businessuser)){\n      Swal.fire({\n        title: \"회원가입 실패! \",\n        text: \"모두 입력해 주세요\",\n        icon: \"error\",\n        confirmButtonText: \"확인\",\n      });\n      return false;\n    }\n\n    if (this.password1 !== this.password2) {\n      Swal.fire({\n        title: \"회원가입 실패! \",\n        text: '비밀 번호가 일치하지 않습니다',\n        icon: \"error\",\n        confirmButtonText: \"확인\",\n      });\n      return false;\n    }\n\n    if(!this.validateService.validateEmail(businessuser.email)){\n      Swal.fire({\n        title: \"회원가입 실패! \",\n        text: '이메일 주소가 올바르지 않습니다',\n        icon: \"error\",\n        confirmButtonText: \"확인\",\n      });\n      return false;\n    }\n\n    if(!this.validateService.licensecheck(businessuser.licenseNum)){\n      Swal.fire({\n        title: \"회원가입 실패! \",\n        text: '사업자 번호를 확인해주세요!',\n        icon: \"error\",\n        confirmButtonText: \"확인\",\n      });\n      this.router.navigate(['/business']);\n      return false;\n    }\n    this.authService.businessUser(businessuser).subscribe(data => {\n    if(data.success) {\n      Swal.fire({\n        title: \"회원가입 성공! \",\n        icon: \"success\",\n        confirmButtonText: \"확인\",\n      });\n      this.router.navigate(['/businesslogin']);\n    } else {\n      Swal.fire({\n        title: \"회원가입 실패! \",\n        text: data.msg,\n        icon: \"error\",\n        confirmButtonText: \"확인\",\n        \n      });\n      this.router.navigate(['/business']);\n      return false;\n    }\n  });\n}\n}\n","<br>\n<h2 class=\"page-header\">Qyaho 사업자 회원가입</h2>\n<br>\n<form (ngSubmit)=\"onRegisterSubmit()\">\n    <div class = \"from-group\">\n        <label> * 이름 </label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n    </div>\n    <div class=\"form-gruop\">\n        <label> * 이메일 </label>\n        <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n    </div>\n    <div class=\"form-gruop\">\n        <label> * 생년월일 </label>\n        <input type=\"date\" [(ngModel)]=\"birth\" name=\"birth\" class=\"form-control\">\n    </div>\n    <div class=\"form-gruop\">\n        <label> * ID </label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label> * 비밀번호 </label>\n        <input type=\"password\" [(ngModel)]=\"password1\" name=\"password1\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label> * 비밀번호 확인 </label>\n        <input type=\"password\" [(ngModel)]=\"password2\" name=\"password2\" class=\"form-control\">\n    </div>\n    <div class = \"form-group\">\n        <label> * 사업자 번호('-' 없이 입력) </label>\n        <input type=\"number\" [(ngModel)]=\"licenseNum\" name=\"licenseNum\" class=\"form-control\">\n    </div>\n    <br>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"가입하기\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: 'app-businesslogin',\n  templateUrl: './businesslogin.component.html',\n  styleUrls: ['./businesslogin.component.scss']\n})\nexport class BusinessloginComponent implements OnInit {\n  username: string;\n  password: string;\n  licenseNum: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit(){\n    const businesslogin = {\n      username: this.username,\n      password: this.password,\n      licenseNum: this.licenseNum\n    }\n\n    this.authService.authenticatebusiness(businesslogin).subscribe(data => {\n      if(data.success) {\n        this.authService.storeUserData(data.token, data.userNoPW);\n        Swal.fire({\n          title: \"로그인 성공! \",\n          icon: \"success\",\n          confirmButtonText: \"확인\",\n        });\n        this.router.navigate(['']);\n      } else {\n        Swal.fire({\n          title: \"로그인 실패! \",\n          text: data.msg,\n          icon: \"error\",\n          confirmButtonText: \"확인\",\n        });\n        this.router.navigate(['/businesslogin']);\n      }\n    });\n  }\n\n}","<br>\n<h2 class=\"page-header\">Qyaho 사업자 로그인</h2>\n<br>\n<form (ngSubmit) = \"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>ID</label>\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"username\">\n    </div>\n    <br>\n    <div class=\"form-group\">\n        <label>비밀번호</label>\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <br>\n    <div class=\"form-group\">\n        <label>사업자 번호(번호만 입력하세요.)</label>\n        <input type=\"text\" class=\"form-control\" name=\"licenseNum\" [(ngModel)]=\"licenseNum\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { QRCode } from 'jsqr';\n\nexport interface DialogData {\n  qrcode: QRCode;\n}\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss'],\n})\nexport class DialogComponent implements OnInit {\n  constructor(\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  onNoClick(): void { \n   \n    this.dialogRef.close();\n  }\n}\n","<h3 mat-dialog-title>QR CODE</h3>\n<mat-dialog-content class=\"mat-typography\">\n  <p *ngIf=\"data.qrcode !== undefined\">{{ data.qrcode.data }}</p>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button [mat-dialog-close]=\"true\">OK</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from \"sweetalert2\";\n\nimport { Cus_num } from \"../../models/cus.num\"\nimport { CustomerNumService } from \"../../services/customers_num.service\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\n\nexport class HomeComponent implements OnInit {\n  business = Object;\n  \n  customers: Cus_num[] = [];\n  customersQuantity: number = 0;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private customer1Service: CustomerNumService\n  ) {\n    this.customer1Service.getCustomerNums().subscribe((data) => {\n      this.customers = data;\n      this.customersQuantity = data.length;\n    });\n   }\n\n\n\n   ngOnInit() {\n        this.authService.getProfile().subscribe(profile => {\n          this.business= profile.user;\n        }, err => {\n          console.log(err);\n          return false;\n        });\n    \n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    Swal.fire({\n      title: \"로그아웃 성공! \",\n      icon: \"success\",\n      confirmButtonText: \"확인\",\n    });\n    this.router.navigate(['/login']);\n    return false;\n   }\n   checkLoggedIn() {\n    return this.authService.loggedIn();\n  }\n}\n","<style type=\"text/css\">\n  .blank {\n    height: 150px;\n  }\n</style>\n\n<br />\n<div *ngIf=\"!checkLoggedIn()\" style=\"text-align: center; vertical-align: top\">\n  <h4 class=\"comment\">아직 계정이 없으신가요?</h4>\n  <h3 class=\"comment1\">계정이 있으시면 로그인하세요!</h3>\n  <br />\n\n  <button\n    *ngIf=\"!checkLoggedIn()\"\n    type=\"button\"\n    class=\"btn btn-primary\"\n    routerLink=\"/business\"\n  >\n    사업자 회원 가입\n  </button>\n  &nbsp;\n  <button\n    *ngIf=\"!checkLoggedIn()\"\n    type=\"button\"\n    style=\"text-align: center; vertical-align: top\"\n    class=\"btn btn-primary\"\n    type=\"button\"\n    routerLink=\"/businesslogin\"\n  >\n    사업자 로그인\n  </button>\n  &nbsp;\n  <br />\n</div>\n<br />\n<div\n  *ngIf=\"checkLoggedIn()\"\n  style=\"\n    text-align: center;\n    vertical-align: top;\n    border: 1px solid peachpuff;\n    border-radius: 60px;\n    padding-top: 10px;\n    background-color: peachpuff;\n  \"\n>\n  <h1 style=\"padding-top: 10px; padding-bottom: 10px\">\n    어서오세요! Qyaho 은행입니다.\n  </h1>\n</div>\n<br />\n<div\n  *ngIf=\"checkLoggedIn()\"\n  style=\"\n    text-align: center;\n    vertical-align: top;\n    border: 1px solid peachpuff;\n    border-radius: 5px;\n    padding: 10px;\n    background-color: peachpuff;\n  \"\n>\n  <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/qrscan\">\n    대기 순번 등록\n  </button>\n  &nbsp;\n  <button class=\"btn btn-primary\" type=\"button\" routerLink=\"/qrscan\">\n    대기 순번 서비스 제공\n  </button>\n\n  <h2 class=\"waitpeople\">현재 대기자 수는 {{ customersQuantity }}명 입니다.</h2>\n  <h2 class=\"waitpeople\">\n    예상 대기 시간은 {{ customersQuantity * 5 }}분 입니다.\n  </h2>\n</div>\n<br />\n<div>\n  <app-pic-slide></app-pic-slide>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-pic-slide',\n  templateUrl: './pic-slide.component.html',\n  styleUrls: ['./pic-slide.component.scss'],\n})\nexport class PicSlideComponent {\n  homeSlider = { items: 1, dots: true, navigator: true };\n}\n","<div class=\"container\">\n  <owl-carousel [options]=\"homeSlider\" [carouselClasses]=\"['owl-theme']\">\n    <div class=\"item\">\n      <img src=\"../../assets/images/slide2.jpg\" />\n    </div>\n    <div class=\"item\">\n      <img src=\"../../assets/images/slide1.jpg\" />\n    </div>\n  </owl-carousel>\n</div>\n<br />\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: [\n  ]\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"py-10 bg-dark\">\n    <div class=\"container \" style= \"text-align: center;\" >\n        <p class=\"m-0 footer-text text-white \">Copyright &copy;2000 Qyaho</p>\n        <p class=\"m-0 footer-text text-white\"> Gradudation project</p>\n    </div>\n</footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'qyaho';\n  \n  name = 'Angular';\n  imageObject = [{\n      image: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/5.jpg',\n      thumbImage: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/5.jpg',\n      title: 'Hummingbirds are amazing creatures'\n  }, {\n      image: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/9.jpg',\n      thumbImage: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/9.jpg'\n  }, {\n      image: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/4.jpg',\n      thumbImage: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/4.jpg',\n      title: 'Example with title.'\n  },{\n      image: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/7.jpg',\n      thumbImage: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/7.jpg',\n      title: 'Hummingbirds are amazing creatures'\n  }, {\n      image: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/1.jpg',\n      thumbImage: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/1.jpg'\n  }, {\n      image: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/2.jpg',\n      thumbImage: 'https://sanjayv.github.io/ng-image-slider/contents/assets/img/slider/2.jpg',\n      title: 'Example two with title.'\n  }];\n  \n}\n","<html>\n  <header>\n    <app-navbar></app-navbar>\n  </header>\n  <body>\n    <div class=\"container\">\n      <router-outlet></router-outlet>\n    </div>\n  </body>\n  <footer>\n    <app-footer></app-footer>\n  </footer>\n</html>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../models/User';\nimport { Cus_num } from '../models/cus.num';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n//회원 목록\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomersService {\n  constructor(private http: HttpClient) {}\n\n  prepEndpoint(ep) {\n    // 1. localhost에 포팅시\n    // return 'http://localhost:3000/' + ep;\n\n    // 2. Heroku 클라우드 서버에 포팅시\n    return ep;\n  }\n\n  API_URL: string = this.prepEndpoint('users/cus_list/');\n\n  getCustomers() {\n    return this.http.get<User[]>(this.API_URL, httpOptions);\n  }\n\n  getCustomer(id: string) {\n    return this.http.get<User>(this.API_URL + `${id}`, httpOptions);\n  }\n\n  addCustomer(user: User) {\n    return this.http.post<User>(this.API_URL, user, httpOptions);\n  }\n\n  editCustomer(id: string, user: User) {\n    return this.http\n      .put<User>(this.API_URL + `${id}`, user, httpOptions)\n      .subscribe();\n  }\n\n  deleteCustomer(id: string) {\n    return this.http\n      .delete<User>(this.API_URL + `${id}`, httpOptions)\n      .subscribe();\n  }\n  getCustomerNums() {\n    return this.http.get<Cus_num[]>(this.API_URL, httpOptions);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Cus_num } from \"../../models/cus.num\"\nimport { CustomerNumService } from \"../../services/customers_num.service\";\n\nimport { FormBuilder, FormGroup, Validators,ReactiveFormsModule } from \"@angular/forms\";\nimport Swal from \"sweetalert2\";\n@Component({\n  selector: 'app-customer-num',\n  templateUrl: './customer-num.component.html',\n  styleUrls: ['./customer-num.component.scss']\n})\n\nexport class CustomerNumComponent {\n\n\n\n  \n  customers: Cus_num[] = [];\n  customersQuantity: number = 0;\n\n  constructor(private customer1Service: CustomerNumService) {\n    this.customer1Service.getCustomerNums().subscribe((data) => {\n      this.customers = data;\n      this.customersQuantity = data.length;\n    });\n  }\n\n\n  deleteCustomer(id: string) {\n    Swal.fire({\n    title: \"순번 삭제\",\n    text: \"정말로 순번을 삭제 하시겠습니까?\",\n      icon: \"warning\",\n   showCancelButton: true,\n   confirmButtonColor: \"#d33\",\n    cancelButtonColor: \"#3085d6\",\n      confirmButtonText: \"확인\",\n   }).then((result) => {\n      if (result.value) {\n     this.customer1Service.deleteCustomerNum(id);\n     this.customers = this.customers.filter((customer) => customer._id !== id);\n     this.customersQuantity = this.customersQuantity - 1;\n      Swal.fire(\"성공!\",  \"예약이 취소 되었습니다.\");\n    }\n });\n }\n  \n}\n","<br>\n<h1 class=\"text-center\">대기 순번 </h1>\n<div>\n  <div class=\"text-right mt-6\">\n    <p class=\"text-success\">대기자: {{ customersQuantity }}</p>\n  </div>\n  <table class=\"table\">\n    <thead class=\"thead-dark\">\n      <tr class=\"text-center\">\n        <th scope=\"col\">순번</th>\n        <th scope=\"col\">이름</th>\n        <!-- <th scope=\"col\">Email</th> -->\n        <!-- <th scope=\"col\">ID</th> -->\n        <th scope=\"col\">대기 등록 시간</th>\n        <th scope=\"col\">순번 삭제</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr *ngFor=\"let customer of customers; let i = index\">\n        <td class=\"text-center\" style=\"width: 10%;\">\n          <h5>{{i+1}}</h5>\n        </td>\n        <td class=\"text-center\" style=\"width: 40%;\">\n          <h5>{{ customer.name }}</h5>\n        </td>\n        <!-- <td class=\"text-center\" style=\"width: 20%;\">\n            <h5>{{ customer.email }}</h5>\n          </td> -->\n        <!-- <td class=\"text-center\" style=\"width: 20%;\">\n          <h5>{{ customer.username }}</h5>\n        </td> -->\n        <!-- <td class=\"text-center\" style=\"width: 20%;\">\n          <h5>{{ customer.password }}</h5>\n        </td> -->\n        <td class=\"text-center\" style=\"width: 40%;\">\n            <h5>{{customer.time| date: 'MM/dd hh:mm:ss a'}}</h5>\n          </td>\n\n        <td class=\"text-center\" style=\"width: 10%;\">\n          <button (click)=\"deleteCustomer(customer._id)\" class=\"btn btn-danger\">삭제</button>\n        </td>\n        <!-- <td class=\"text-center\" style=\"width: 5%;\">\n          <button (click)=\"editEmployee(employee)\" class=\"btn btn-warning\">Edit</button>\n        </td> -->\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxQRCodeModule } from '@techiediaries/ngx-qrcode';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxMaskModule, IConfig } from 'ngx-mask';\nimport { OwlModule } from 'ngx-owl-carousel';\n\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CustomerListComponent } from './components/customer-list/customer-list.component';\nimport { CustomerNumComponent } from './components/customer-num/customer-num.component';\nimport { BusinessComponent } from './components/business/business.component';\nimport { BusinessloginComponent } from './components/businesslogin/businesslogin.component';\nimport { QrscanComponent } from './components/Qrscan/qrscan.component';\nimport { PicSlideComponent } from './components/pic-slide/pic-slide.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { DialogComponent } from './components/dialog/dialog.component';\n\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\n\nconst maskConfig: Partial<IConfig> = {\n  validation: false,\n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CustomerListComponent,\n    CustomerNumComponent,\n    BusinessComponent,\n    BusinessloginComponent,\n    QrscanComponent,\n    PicSlideComponent,\n    FooterComponent,\n    DialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxQRCodeModule,\n    TooltipModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    OwlModule,\n\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return localStorage.getItem('id_token');\n        },\n      },\n    }),\n    NgxMaskModule.forRoot(maskConfig),\n  ],\n  providers: [ValidateService, AuthService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Cus_num } from '../models/cus.num';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n\n//대기 순번\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerNumService {\n  prepEndpoint(ep) {\n    // 1. localhost에 포팅시\n    // return 'http://localhost:3000/' + ep;\n\n    // 2. Heroku 클라우드 서버에 포팅시\n    return ep;\n  }\n\n  API_URL: string = this.prepEndpoint('cusnum/cus_nums/');\n\n  constructor(private http: HttpClient) {}\n\n  getCustomerNums() {\n    return this.http.get<Cus_num[]>(this.API_URL, httpOptions);\n  }\n\n  getCustomerNum(id: string) {\n    return this.http.get<Cus_num>(this.API_URL + `${id}`, httpOptions);\n  }\n\n  addCustomerNum(Cus_num: Cus_num): Observable<any> {\n    return this.http.post<Cus_num>(this.API_URL, Cus_num, httpOptions);\n  }\n\n  editCustomerNum(id: string, Cus_num: Cus_num) {\n    return this.http\n      .put<Cus_num>(this.API_URL + `${id}`, Cus_num, httpOptions)\n      .subscribe();\n  }\n\n  deleteCustomerNum(id: string) {\n    return this.http\n      .delete<Cus_num>(this.API_URL + `${id}`, httpOptions)\n      .subscribe();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { User } from \"../../models/User\"\nimport { CustomersService } from \"../../services/customers.service\";\nimport { FormBuilder, FormGroup, Validators,ReactiveFormsModule } from \"@angular/forms\";\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\nexport class CustomerListComponent implements OnInit {\n\n  customers: User[] = [];\n  customerForm: FormGroup;\n  selectedCustomer: User = new User();\n  customersQuantity: number = 0;\n\n  constructor(private customer1Service: CustomersService, private _builder: FormBuilder) {\n    this.customer1Service.getCustomers().subscribe((data) => {\n      this.customers = data;\n      this.customersQuantity = data.length;\n    });\n\n    // this.employeeForm = this._builder.group({\n    //   first_name: [\"\", Validators.required],\n    //   last_name: [\"\", Validators.required],\n    //   email: [\"\", Validators.compose([Validators.required, Validators.email])],\n    //   avatar: [\"\", Validators.required],\n    // });\n  }\n  ngOnInit(): void {\n\n  }\n\n  _blankControls() {\n    this.customerForm.get(\"name\").reset();\n    this.customerForm.get(\"email\").reset();\n    this.customerForm.get(\"username\").reset();\n    this.customerForm.get(\"password\").reset();\n    this.customerForm.get(\"birth\").reset();\n  }\n\n  manageSubmit(values: User) {\n    if (this.selectedCustomer._id === undefined) {\n      this.customer1Service.addCustomer(values).subscribe((data) => {\n        return this.customers.push(data);\n      });\n      this.customersQuantity = this.customersQuantity + 1;\n      Swal.fire({\n        title: \"예약 성공! \",\n        icon: \"success\",\n        confirmButtonText: \"Cool\",\n      });\n    } else {\n      this.customer1Service.editCustomer(this.selectedCustomer._id, values);\n\n      const index = this.customers.findIndex(\n        (user) => user._id === this.selectedCustomer._id\n      );\n      this.customers[index].name = this.customerForm.get(\"first_name\").value;\n      this.customers[index].email = this.customerForm.get(\"last_name\").value;\n      this.customers[index].username = this.customerForm.get(\"email\").value;\n      this.customers[index].password = this.customerForm.get(\"avatar\").value;\n      this.customers[index].birth = this.customerForm.get(\"avatar\").value;\n      Swal.fire({\n        title: \"예약이 수정되었습니다!\",\n        icon: \"success\",\n        confirmButtonText: \"Cool\",\n      });\n    }\n    this.selectedCustomer = new User();\n    this._blankControls();\n  }\n  \n  // 수정, 삭제\n  deleteCustomer(id: string) {\n     Swal.fire({\n     title: \"회원 삭제\",\n     text: \"정말로 회원을 삭제 하시겠습니까?\",\n       icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#d33\",\n     cancelButtonColor: \"#3085d6\",\n       confirmButtonText: \"확인\",\n    }).then((result) => {\n       if (result.value) {\n      this.customer1Service.deleteCustomer(id);\n      this.customers = this.customers.filter((customer) => customer._id !== id);\n      this.customersQuantity = this.customersQuantity - 1;\n       Swal.fire(\"성공!\", \"회원을 정상적으로 삭제했습니다.\", \"success\");\n     }\n  });\n  }\n\n   editCustomer(customer: User) {\n    this.selectedCustomer = customer;\n    this.customerForm.get(\"first_name\").setValue(this.selectedCustomer.name);\n     this.customerForm.get(\"last_name\").setValue(this.selectedCustomer.email);\n     this.customerForm.get(\"email\").setValue(this.selectedCustomer.username);\n     this.customerForm.get(\"avatar\").setValue(this.selectedCustomer.password);\n    this.customerForm.get(\"avatar\").setValue(this.selectedCustomer.birth);\n   }\n}","    <br>\n    <h1 class=\"text-center\">회원 목록 </h1>\n    <div>\n      <div class=\"text-right mt-6\">\n        <p class=\"text-success\">회원 수: {{ customersQuantity }}</p>\n      </div>\n      <table class=\"table\">\n        <thead class=\"thead-dark\">\n          <tr class=\"text-center\">\n            <th scope=\"col\">이름</th>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">이메일</th>\n            <th scope=\"col\">생일</th>\n        <th scope=\"col\">회원 삭제</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr *ngFor=\"let customer of customers\">\n            <td class=\"text-center\" style=\"width: 20%;\">\n              <h5>{{ customer.name }}</h5>\n            </td>\n            <td class=\"text-center\" style=\"width: 20%;\">\n                <h5>{{ customer.username }}</h5>\n              </td>\n            <td class=\"text-center\" style=\"width: 20%;\">\n              <h5>{{ customer.email }}</h5>\n            </td>\n            <!-- <td class=\"text-center\" style=\"width: 20%;\">\n              <h5>{{ customer.password }}</h5>\n            </td> -->\n            <td class=\"text-center\" style=\"width: 20%;\">\n                <h5>{{ customer.birth }}</h5>\n              </td>\n\n            <td class=\"text-center\" style=\"width: 10%;\">\n              <button (click)=\"deleteCustomer(customer._id)\" class=\"btn btn-danger\">삭제</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == \"\" || user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined || user.birth == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validatebusiness(businessuser) {\n    if(businessuser.name == \"\" || businessuser.name == undefined || businessuser.email == undefined || businessuser.username == undefined || businessuser.password == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n    }\n    \n    licensecheck(licenseNum){\n      const stlicense = new String(licenseNum);\n      const sl = stlicense.length;\n      if(licenseNum <= 9999999999 && licenseNum >= 0 && sl == 10){\n        return true;\n      } else {\n        return false;\n      }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from \"sweetalert2\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    Swal.fire({\n      title: \"로그아웃 성공! \",\n      icon: \"success\",\n      confirmButtonText: \"확인\",\n    });\n    this.router.navigate(['']);\n    return false;\n   }\n   checkLoggedIn() {\n     return this.authService.loggedIn();\n   }\n}\n  \n\n\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"/\">Qyaho은행 사업자전용</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li *ngIf=\"!checkLoggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/business\">사업자 회원가입</a>\n      </li>\n\n      <li *ngIf=\"!checkLoggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/businesslogin\">사업자 로그인</a>\n      </li>\n\n      <li *ngIf=\"checkLoggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/Customer_list\">회원 목록 관리</a>\n      </li>\n\n      <li *ngIf=\"checkLoggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/Customer_Num\">대기 순번 관리</a>\n      </li>\n\n      <li *ngIf=\"checkLoggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/qrscan\">QRSCAN</a>\n      </li>\n\n      <li *ngIf=\"checkLoggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">로그아웃</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UserNoPW, Businesslogin } from '../models/User';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: any;\n  userNoPW: UserNoPW;\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) {}\n\n  prepEndpoint(ep) {\n    // 1. localhost에 포팅시\n    // return 'http://localhost:3000/' + ep;\n\n    // 2. Heroku 클라우드 서버에 포팅시\n    return ep;\n  }\n\n  storeUserData(token, userNoPW) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('business', JSON.stringify(userNoPW));\n    this.authToken = token;\n    this.userNoPW = userNoPW;\n  }\n\n  getProfile(): Observable<any> {\n    this.authToken = localStorage.getItem('id_token');\n    const httpOptions1 = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.authToken,\n      }),\n    };\n\n    const profileUrl = this.prepEndpoint('users/profile');\n    return this.http.get(profileUrl, httpOptions1);\n  }\n\n  logout() {\n    this.authToken = null;\n    this.userNoPW = null;\n    localStorage.clear();\n  }\n\n  loggedIn() {\n    return !this.jwtHelper.isTokenExpired(this.authToken);\n  }\n\n  businessUser(businessuser): Observable<any> {\n    const BusinessUrl = this.prepEndpoint('businesses/cos');\n    return this.http.post(BusinessUrl, businessuser, httpOptions);\n  }\n\n  authenticatebusiness(businesslogin): Observable<any> {\n    const BloginUrl = this.prepEndpoint('businesses/authenticate');\n    return this.http.post<Businesslogin>(BloginUrl, businesslogin, httpOptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CustomerNumComponent} from './components/customer-num/customer-num.component';\nimport { BusinessComponent } from './components/business/business.component';\nimport { BusinessloginComponent } from './components/businesslogin/businesslogin.component';\nimport { CustomerListComponent } from './components/customer-list/customer-list.component';\nimport { QrscanComponent } from './components/Qrscan/qrscan.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'navbar', component: NavbarComponent },\n  { path: 'Customer_Num', component: CustomerNumComponent},\n  { path: 'business', component: BusinessComponent},\n  { path: 'businesslogin', component: BusinessloginComponent },\n  { path: 'Customer_list', component: CustomerListComponent},\n  { path: 'qrscan', component: QrscanComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export class User {\n    _id: string;\n    name: string;\n    email: string;\n    username: string;\n    password: string;\n    birth: string;\n}\n\nexport class Login {\n    username: string;\n    password: string;\n}\n\nexport class UserNoPW {\n    name: string;\n    email: string;\n    username: string;\n}\n\nexport class business {\n    name: string;\n    email: string;\n    username: string;\n    password: string;\n    birth: string;\n    licenseNum: string;\n}\n\nexport class Businesslogin {\n    username: string;\n    password: string;\n    licenseNum: string;\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}